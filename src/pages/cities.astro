---
import MainLayout from '../layouts/MainLayout.astro';

// Use actual cities data from the generated data
const cities = [{"name":"Telluride","state":"CO","description":"Business directory for Telluride, CO","listingCount":2,"categories":["website"]},{"name":"Winter Park","state":"CO","description":"Business directory for Winter Park, CO","listingCount":3,"categories":["SkiResort"]},{"name":"Mesa","state":"CO","description":"Business directory for Mesa, CO","listingCount":1,"categories":["website"]},{"name":"Vail","state":"CO","description":"Business directory for Vail, CO","listingCount":2,"categories":["Ski Resort"]},{"name":"Breckenridge","state":"CO","description":"Business directory for Breckenridge, CO","listingCount":2,"categories":["Ski Resort"]},{"name":"Aspen","state":"CO","description":"Business directory for Aspen, CO","listingCount":4,"categories":["Ski Resort","website"]},{"name":"Keystone","state":"CO","description":"Business directory for Keystone, CO","listingCount":2,"categories":["Ski Resort"]},{"name":"Beaver Creek","state":"CO","description":"Business directory for Beaver Creek, CO","listingCount":2,"categories":["Ski Resort"]},{"name":"Steamboat Springs","state":"CO","description":"Business directory for Steamboat Springs, CO","listingCount":3,"categories":["Ski Resort"]},{"name":"Copper Mountain","state":"CO","description":"Business directory for Copper Mountain, CO","listingCount":2,"categories":["WebSite"]},{"name":"Crested Butte","state":"CO","description":"Business directory for Crested Butte, CO","listingCount":2,"categories":["Ski Resort"]},{"name":"Snowmass Village","state":"CO","description":"Business directory for Snowmass Village, CO","listingCount":2,"categories":["Organization"]},{"name":"Dillon","state":"CO","description":"Business directory for Dillon, CO","listingCount":1,"categories":["website"]},{"name":"Georgetown","state":"CO","description":"Business directory for Georgetown, CO","listingCount":2,"categories":["website"]},{"name":"Nederland","state":"CO","description":"Business directory for Nederland, CO","listingCount":1,"categories":["WebSite"]},{"name":"Salida","state":"CO","description":"Business directory for Salida, CO","listingCount":1,"categories":["website"]},{"name":"Glenwood Springs","state":"CO","description":"Business directory for Glenwood Springs, CO","listingCount":1,"categories":["website"]},{"name":"Leadville","state":"CO","description":"Business directory for Leadville, CO","listingCount":1,"categories":["website"]},{"name":"Pagosa Springs","state":"CO","description":"Business directory for Pagosa Springs, CO","listingCount":1,"categories":["website"]},{"name":"Durango","state":"CO","description":"Business directory for Durango, CO","listingCount":2,"categories":["Ski Resort"]},{"name":"Silverton","state":"CO","description":"Business directory for Silverton, CO","listingCount":2,"categories":["Ski Resort","WebSite"]},{"name":"Hesperus","state":"CO","description":"Business directory for Hesperus, CO","listingCount":1,"categories":["Ski Resort"]},{"name":"Granby","state":"CO","description":"Business directory for Granby, CO","listingCount":2,"categories":["website","article"]},{"name":"Evergreen","state":"CO","description":"Business directory for Evergreen, CO","listingCount":1,"categories":["Ski Resort"]},{"name":"Colorado Springs","state":"CO","description":"Business directory for Colorado Springs, CO","listingCount":1,"categories":["Ski Resort"]},{"name":"Cuchara","state":"CO","description":"Business directory for Cuchara, CO","listingCount":1,"categories":["Ski Resort"]},{"name":"Tabernash","state":"CO","description":"Business directory for Tabernash, CO","listingCount":1,"categories":["Ski Resort"]},{"name":"Frisco","state":"CO","description":"Business directory for Frisco, CO","listingCount":1,"categories":["Ski Resort"]}];
---

<MainLayout title="Cities">
  <div class="min-h-screen bg-gray-50">
    <!-- Hero Section -->
    <div class="bg-gradient-to-r from-teal-600 to-teal-700 text-white py-12 sm:py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold mb-4">Browse by City</h1>
        <p class="text-base sm:text-lg md:text-xl lg:text-2xl opacity-90 mb-6 sm:mb-8">Explore businesses organized by location across Colorado Ski Resorts Directory</p>
        
        <!-- Search Bar -->
        <div class="max-w-2xl mx-auto">
          <div class="relative">
            <input 
              type="text" 
              id="citySearch" 
              placeholder="Search cities..." 
              class="w-full px-4 sm:px-6 py-3 sm:py-4 text-gray-900 text-sm sm:text-base lg:text-lg rounded-lg shadow-lg focus:outline-none focus:ring-4 focus:ring-white focus:ring-opacity-50 transition-all duration-200"
            />
            <button 
              id="citySearchBtn" 
              class="absolute right-1.5 sm:right-2 top-1.5 sm:top-2 bg-teal-600 hover:bg-teal-700 text-white px-3 sm:px-4 lg:px-6 py-1.5 sm:py-2 rounded-lg transition-colors font-medium text-sm sm:text-base"
            >
              Search
            </button>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Cities Grid Section -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <!-- Results Counter -->
      <div class="mb-8 text-center">
        <p id="resultsCount" class="text-gray-600 text-lg">Showing {cities.length} cities</p>
      </div>
      
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 lg:gap-8">
      {cities.map((city) => (
          <div class="city-card bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1">
            <div class="p-4 sm:p-6">
              <!-- City Icon -->
              <div class="w-12 h-12 sm:w-16 sm:h-16 bg-teal-100 rounded-full flex items-center justify-center mx-auto mb-3 sm:mb-4">
                <svg class="w-6 h-6 sm:w-8 sm:h-8 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
              </div>
              
              <!-- City Information -->
              <div class="text-center mb-4 sm:mb-6">
                <h3 class="text-lg sm:text-xl lg:text-2xl font-bold text-gray-900 mb-2">{city.name}, {city.state}</h3>
            <p class="text-gray-600 mb-3 sm:mb-4 text-sm sm:text-base">{city.description}</p>
                <div class="flex items-center justify-center space-x-1 sm:space-x-2">
                  <span class="text-2xl sm:text-3xl font-bold text-teal-600">{city.listingCount}</span>
                  <span class="text-xs sm:text-sm text-gray-500">business listings</span>
          </div>
              </div>
              
              <!-- Categories -->
              {city.categories && city.categories.length > 0 && (
                <div class="mb-4 sm:mb-6">
                  <div class="flex flex-wrap justify-center gap-1 sm:gap-2">
                    {city.categories.map((category) => (
                      <span class="px-2 sm:px-3 py-1 bg-gray-100 text-gray-700 text-xs rounded-full">
                        {category}
                      </span>
                    ))}
                  </div>
                </div>
              )}
              
              <!-- Action Button -->
            <button 
              data-city={city.name}
              class="city-button w-full bg-teal-600 hover:bg-teal-700 text-white font-medium py-2.5 sm:py-3 px-3 sm:px-4 rounded-lg transition-colors shadow-md hover:shadow-lg transform hover:scale-105 text-sm sm:text-base"
            >
              View Listings
            </button>
          </div>
        </div>
      ))}
    </div>
      
      <!-- Summary Stats -->
      <div class="mt-16 text-center">
        <div class="bg-white rounded-xl shadow-lg p-8">
          <h2 class="text-2xl font-bold text-gray-900 mb-4">Directory Summary</h2>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div>
              <div class="text-3xl font-bold text-teal-600">{cities.length}</div>
              <div class="text-gray-600">Total Cities</div>
  </div>
            <div>
              <div class="text-3xl font-bold text-teal-600">{cities.reduce((sum, city) => sum + city.listingCount, 0)}</div>
              <div class="text-gray-600">Total Listings</div>
            </div>
            <div>
              <div class="text-3xl font-bold text-teal-600">{Math.max(...cities.map(city => city.listingCount))}</div>
              <div class="text-gray-600">Most Listings in One City</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    function goToCity(cityName) {
      if (cityName) {
        const citySlug = cityName.toLowerCase().replace(/\s+/g, '-');
        window.location.href = '/cities/' + citySlug;
      }
    }
    
    // City search functionality
    function filterCities() {
      const searchTerm = document.getElementById('citySearch').value.toLowerCase();
      const cityCards = document.querySelectorAll('.city-card');
      
      cityCards.forEach(card => {
        const cityName = card.querySelector('h3').textContent.toLowerCase();
        const cityState = card.querySelector('.text-gray-600').textContent.toLowerCase();
        const cityDescription = card.querySelector('p').textContent.toLowerCase();
        
        if (cityName.includes(searchTerm) || cityState.includes(searchTerm) || cityDescription.includes(searchTerm)) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
      
      // Update results count
      const visibleCards = Array.from(cityCards).filter(card => card.style.display !== 'none');
      const resultsCount = document.getElementById('resultsCount');
      if (resultsCount) {
        resultsCount.textContent = `Showing ${visibleCards.length} of ${cityCards.length} cities`;
      }
    }
    
    // Make functions available globally
    window.goToCity = goToCity;
    window.filterCities = filterCities;
    
    // Add event listeners
    document.addEventListener('DOMContentLoaded', function() {
      // City buttons
      const cityButtons = document.querySelectorAll('.city-button');
      cityButtons.forEach(button => {
        button.addEventListener('click', function() {
          const cityName = this.getAttribute('data-city');
          goToCity(cityName);
        });
      });
      
      // Search functionality
      const searchInput = document.getElementById('citySearch');
      const searchButton = document.getElementById('citySearchBtn');
      
      if (searchInput) {
        searchInput.addEventListener('input', filterCities);
        searchInput.addEventListener('keypress', function(e) {
          if (e.key === 'Enter') {
            filterCities();
          }
        });
      }
      
      if (searchButton) {
        searchButton.addEventListener('click', filterCities);
      }
    });
  </script>
</MainLayout>